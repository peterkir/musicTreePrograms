/*
 * WARNING
 *
 * This file is maintained automatically by Bndtools.
 * You should not edit it.
 *
 * See the BUILDING-GRADLE.md document in the root project for more details.
 *
 * Add findbugs tasks to a (java) project.
 *
 * Note: the 'java' plugin must have been applied to the project before this
 *       file can be applied.
 *
 * Note: Set the 'CI' property (-PCI on the command line) to generate XML
 *       reports instead of html reports.
 */

assert(project != rootProject   )
assert(hasProperty('sourceSets'))


repositories {
  mavenCentral()
}


apply plugin: 'findbugs'


if (!hasProperty('findbugsReportXML'     )) ext.findbugsReportXML      = 'CI'

if (!hasProperty('findbugsToolVersion'   )) ext.findbugsToolVersion    = '3.0.0'
if (!hasProperty('findbugsIgnoreFailures')) ext.findbugsIgnoreFailures = true
if (!hasProperty('findbugsEffort'        )) ext.findbugsEffort         = 'default'  /* min, default, max           */
if (!hasProperty('findbugsReportLevel'   )) ext.findbugsReportLevel    = 'medium'   /* low, medium (default), high */
if (!hasProperty('findbugsReportsDir'    )) ext.findbugsReportsDir     = 'findbugs' /* relative to build directory */
if (!hasProperty('findbugsIncludesFile'  )) ext.findbugsIncludesFile   = "${rootProject.rootDir}/${rootProject.bndCnf}/findbugs/findbugs.include.xml"
if (!hasProperty('findbugsExcludesFile'  )) ext.findbugsExcludesFile   = "${rootProject.rootDir}/${rootProject.bndCnf}/findbugs/findbugs.exclude.xml"


findbugs {
  toolVersion    =          findbugsToolVersion
  ignoreFailures =          findbugsIgnoreFailures
  effort         =          findbugsEffort
  reportLevel    =          findbugsReportLevel
  reportsDir     = new File(buildDir, "${findbugsReportsDir}")
  includeFilter  =     file(findbugsIncludesFile             )
  excludeFilter  =     file(findbugsExcludesFile             )
}

findbugsMain {
  dependsOn assemble
  reports {
    xml.enabled  = rootProject.hasProperty(findbugsReportXML) ? true  : false
    html.enabled = rootProject.hasProperty(findbugsReportXML) ? false : true
  }
}

findbugsTest {
  dependsOn test
  reports {
    xml.enabled  = rootProject.hasProperty(findbugsReportXML) ? true  : false
    html.enabled = rootProject.hasProperty(findbugsReportXML) ? false : true
  }
}

gradle.taskGraph.whenReady { taskGraph ->
  tasks.findbugsMain.onlyIf {
    taskGraph.hasTask((tasks.findbugs))
  }
  tasks.findbugsTest.onlyIf {
    taskGraph.hasTask((tasks.findbugstest))
  }
}
